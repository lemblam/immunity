# Adapted from: https://github.com/hbctraining/Intro-to-scRNAseq
# Original author: @mistrm82

install.packages("Seurat")
install.packages('hdf5r')
library(Seurat)
library(tidyverse)

setwd("/Users/adrianchan/Desktop/GettingStarted_scRNASeq/data")
W10 <- Read10X_h5("W10_filtered_feature_bc_matrix.h5")
#List files 
files <- list.files(path="/Users/adrianchan/Desktop/GettingStarted_scRNASeq/data",recursive=T,pattern="*.h5")

#Create a list of count matrices
h5_read <- lapply(paste0("", files), Read10X_h5)

#Automated way to assign names; modify for your purposes   
#names(h5_read)<- sapply(files, 
#                        function(x){str_split_1(x,"_")[1]},
#                        USE.NAMES = FALSE)

#Assign names manually
names(h5_read)<-c("D10","D16","D20","D26","W10","W16","W20","W26")

W10[1:5,1:5]

# All samples
adp <- mapply(CreateSeuratObject,counts=h5_read,  
              project=names(h5_read),
              MoreArgs = list(min.cells = 3, min.features = 200))
# View adp 
adp

adp <- merge(adp[[1]], y = adp[2:length(adp)], 
             add.cell.ids = names(adp),project="Adipose")

adp2<-CreateSeuratObject(counts=h5_read, min.cells = 3,
                         min.features = 200)
head(adp@meta.data)
head(adp$orig.ident)
#Access multiple columns, rows. 
head(adp[[c("orig.ident", "nCount_RNA")]])[1:3,]

adp$condition <- ifelse(str_detect(adp@meta.data$orig.ident, "^W"),
                        "WT","DKO")
adp$time_point <- ifelse(str_detect(adp@meta.data$orig.ident, "0"),
                         "Day 0","Day 6")

adp$cond_tp <- paste(adp$condition, adp$time_point)

head(Cells(adp,layer="counts.W10"))

head(colnames(adp))

head(Features(adp))

head(rownames(adp))

Assays(adp)

#return number of cells across all layers
num_cells <- ncol(adp)
#return number of features across all layers
num_features <- nrow(adp)
#to return row by column information
dim(adp)

# Visualize the number of cell counts per sample
adp@meta.data %>% 
  ggplot(aes(x=orig.ident, fill=orig.ident)) + 
  geom_bar(color="black") +
  stat_count(geom = "text", colour = "black", size = 3.5, 
             aes(label = ..count..),
             position=position_stack(vjust=0.5))+
  theme_classic() +
  theme(plot.title = element_text(hjust=0.5, face="bold")) +
  ggtitle("Number of Cells per Sample")

saveRDS(adp,"/Users/adrianchan/Desktop/GettingStarted_scRNASeq/merged_Seurat_adp.rds")
library(ggplot2)
install.packages("patchwork")
install.packages("devtools")
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("glmGamPoi")
library(devtools)
install_github('immunogenomics/presto')
library(tidyverse) # dplyr and ggplot2
library(Seurat) # Seurat toolkit
library(hdf5r) # for data import
library(patchwork) # for plotting
library(presto) # for differential expression
library(glmGamPoi) # for sctransform
library(ggplot2)
adp <- readRDS("/Users/adrianchan/Desktop/GettingStarted_scRNASeq/merged_Seurat_adp.rds")
adp[["percent.mt"]] <- PercentageFeatureSet(adp, pattern = "^mt-")
adp@meta.data
metadata <- adp@meta.data

# set colors
cnames<-setNames(rep(c("cyan3","darkgoldenrod1"),each=4),levels(factor(metadata$orig.ident))) 

# plot
VlnPlot(adp, features = "nCount_RNA", layer="counts", group.by="orig.ident",raster=FALSE,alpha=0.2) +
  scale_fill_manual(values=cnames) 

metadata %>% 
  ggplot(aes(color=orig.ident, x=nCount_RNA, fill= orig.ident)) + 
  geom_density(alpha = 0.2) + 
  theme_classic() +
  scale_x_log10() + 
  geom_vline(xintercept = 650,color="red",linetype="dotted")

VlnPlot(adp, features = "nFeature_RNA", group.by="orig.ident") +
  scale_fill_manual(values=cnames) 

ggplot(metadata, aes(x=nFeature_RNA,fill=orig.ident)) +
  geom_density(alpha = 0.2) + 
  theme_classic() +
  scale_x_log10() + 
  geom_vline(xintercept = 350,color="red",linetype="dotted")

VlnPlot(adp, features = "percent.mt", group.by="orig.ident") +
  scale_fill_manual(values=cnames) +
  geom_hline(yintercept=10,color="red")

ggplot(metadata, aes(x=percent.mt,fill=orig.ident)) +
  geom_density(alpha = 0.2) + 
  scale_x_log10()+
  theme_classic()  

FeatureScatter(adp, feature1 = "percent.mt", feature2 ="nFeature_RNA" , group.by="orig.ident",split.by="time_point") 
FeatureScatter(adp, feature1 = "nCount_RNA", feature2 = "nFeature_RNA",group.by="orig.ident",split.by="time_point",log=TRUE)

ggplot(metadata) +
  geom_point(aes(x=nCount_RNA,y=nFeature_RNA,fill=percent.mt > 10),shape=21,alpha=0.4) + 
  theme_classic() +
  scale_x_log10()+
  scale_y_log10()+
  facet_grid(.~cond_tp) +
  geom_vline(xintercept = 650,color="red",linetype="dotted")+
  geom_hline(yintercept=350,color="red", linetype="dotted")

ggplot(metadata) +
  geom_point(aes(x=nCount_RNA,y=nFeature_RNA,fill=percent.mt > 25),shape=21,alpha=0.4) + 
  theme_classic() +
  scale_x_log10()+
  scale_y_log10()+
  facet_grid(.~cond_tp) +
  geom_vline(xintercept = 650,color="red",linetype="dotted")+
  geom_hline(yintercept=350,color="red", linetype="dotted")

# Set one set of parameters for Day 0 samples; 
# keep the rownames (Cell barcodes)
t0<- metadata |> filter(time_point=="Day 0", nFeature_RNA > 350, 
                        nCount_RNA >650, percent.mt <10 ) |> 
  rownames_to_column("Cell") |> pull(Cell) 

# Set an alternative set of thresholds for Day 6 samples; 
# keep the rownames (Cell barcodes)
t6<- metadata |> filter(time_point=="Day 6", nFeature_RNA > 350, 
                        nCount_RNA >650, percent.mt <25 ) |> 
  rownames_to_column("Cell") |> pull(Cell)

keep<-c(t0,t6)

# use different parameters; established above
adp_filt<-filt(adp, cells=keep)
adp_filt <- filt(adp_filt, cells = sample(colnames(adp), 10000))
saveRDS(adp_filt,"/Users/adrianchan/Desktop/GettingStarted_scRNASeq/adp_merge_filt.rds")

adp_filt <- SCTransform(adp_filt, vars.to.regress = "percent.mt", verbose = FALSE)

adp_filt <- RunPCA(adp_filt, verbose = FALSE,assay="SCT")

# dimensions 1 to 9
DimHeatmap(adp_filt, dims = 1:9, cells = 500, balanced = TRUE,ncol=3)
DimHeatmap(adp_filt, dims = 20:30, cells = 500, balanced = TRUE,ncol=3)

ElbowPlot(adp_filt, ndims = 40)

adp_filt <- FindNeighbors(adp_filt, dims = 1:30)
adp_filt <- FindClusters(adp_filt, resolution = 0.1)
adp_filt <- RunUMAP(adp_filt,dims = 1:30)

DimPlot(adp_filt, reduction = "umap", group.by = c("orig.ident", "seurat_clusters","time_point","condition","cond_tp"),
        alpha=0.4, ncol=2)

saveRDS(adp_filt, "/Users/adrianchan/Desktop/GettingStarted_scRNASeq/adp_merge_filt_sctran_clust0.1.rds")

adp_filt<-PrepSCTFindMarkers(adp_filt,verbose=T)

adp_filt_markers <- FindAllMarkers(adp_filt, only.pos = TRUE)

#ordering the results
adp_filt_markers <- adp_filt_markers %>% 
  arrange(cluster,desc(avg_log2FC), desc(p_val_adj))

#examine a small filt
adp_filt_markers %>%
  group_by(cluster) %>%
  slice_max(n = 5, order_by = avg_log2FC)

top20<-adp_filt_markers %>%
  group_by(cluster) %>%
  dplyr::filter(avg_log2FC > 1) %>%
  slice_head(n = 20) %>%
  ungroup() 
DoHeatmap(adp_filt, features = top20$gene) + NoLegend()

mem.maxVSize()
#[1] 16384
mem.maxVSize(vsize=16384*4)
#[1] 65536

#contaminants
contam=c("Ptprc", "Plp1", "Pecam1")
#beige adipocytes
beige=c("Ucp1","Ppargc1a","Elovl3","Cidea")
#preadipocytes
preadip<-c('Mmp3', 'Cd142', 'Itgb1')
#proliferating
prolif<-'Mki67'
#differentiating adipocytes
diffadip<-c('Col5a3', 'Serpina3n')

VlnPlot(adp_filt, features=contam)
FeaturePlot(adp_filt,features=contam)

BiocManager::install("SingleR")
BiocManager::install("celldex")
BiocManager::install("MAST")
library(SingleR) # for cell type annotation; Bioconductor
library(celldex) # for cell type annotation reference; Bioconductor
library(MAST) # for differential expression; Bioconductor

adp <- readRDS("/Users/adrianchan/Desktop/GettingStarted_scRNASeq/adp_merge_filt_sctran_clust0.1.rds")
mem.maxVSize()

glimpse(adp)

table(adp$cond_tp)

table(adp$cond_tp,adp$orig.ident)
DimPlot(adp, reduction = "umap", group.by = c("orig.ident", "seurat_clusters","time_point","condition","cond_tp"),
        alpha=0.4, ncol=2)

adp = PrepSCTFindMarkers(adp)

Idents(adp) = "SCT_snn_res.0.1"
table(Idents(adp))

DefaultAssay(adp) = "SCT"

de_allClusters = FindAllMarkers(adp, test.use="wilcox", min.pct=0.1, only.pos=TRUE)

head(de_allClusters)

nrow(de_allClusters)

top5PerCluster = matrix(ncol=7)
colnames(top5PerCluster) = colnames(de_allClusters)
for (i in 0:7){
  top5PerCluster = rbind(top5PerCluster, head(de_allClusters[which(de_allClusters$cluster==i),], 5))
}
top5PerCluster=top5PerCluster[-1,]
top5PerCluster

DoHeatmap(adp,features = top5PerCluster$gene,slot="scale.data")

Idents(adp) = "time_point"
table(Idents(adp))

day6_day0_de=FindMarkers(adp,ident.1="Day 6",ident.2="Day 0",test.use="wilcox")
head(day6_day0_de, 10)

fig1 = DimPlot(adp,group.by="time_point")
fig2 = FeaturePlot(adp,features="Acta2",order=T)
fig3 = FeaturePlot(adp,features="Cd36",order=T)

fig1/(fig2|fig3)

pseudo_adp=AggregateExpression(adp,assays="RNA", return.seurat=T, group.by=c("orig.ident","time_point","condition","cond_tp"))

head(pseudo_adp@assays$RNA$counts)

pseudo_adp@meta.data

#just to clean up the look a little bit
pseudo_adp = RenameCells(pseudo_adp,new.names=gsub("_.*","",pseudo_adp$orig.ident))
pseudo_adp$orig.ident=gsub("_.*","",pseudo_adp$orig.ident)
head(pseudo_adp@assays$RNA$counts)

pseudo_adp@meta.data

BiocManager::install("DESeq2")
library(DESeq2)
Idents(pseudo_adp)="time_point"
bulk_adp_de = FindMarkers(pseudo_adp, ident.1="Day 6", ident.2="Day 0", test.use="DESeq2")
head(bulk_adp_de)

scDE.genes = rownames(day6_day0_de)[which(day6_day0_de$p_val_adj<0.05)]
bulkDE.genes = rownames(bulk_adp_de)[which(bulk_adp_de$p_val_adj<0.05)]
length(scDE.genes)

length(bulkDE.genes)

length(intersect(scDE.genes,bulkDE.genes))

bulk_adp_de[c("Acta2","Cd36"),]

Idents(adp)="SCT_snn_res.0.1"
DotPlot(adp,features=unique(top5PerCluster$gene),dot.scale = 3)+coord_flip()

Idents(adp) = "time_point"
VlnPlot(adp,features=c("Acta2","Cd36"),alpha = 0.1)

markers=c("Mmp3","Mki67","Fabp4","Scd1","Ucp1","Ppargc1a","Elovl3","Cidea")
Idents(adp)="SCT_snn_res.0.1"
avgExp = AverageExpression(adp,markers,assay="SCT")$SCT

avgExp

DimPlot(adp,label=T)

FeaturePlot(adp,features=markers,ncol=3,order=T)

adipocyte=vector(length=ncol(adp))
adipocyte[which(adp$SCT_snn_res.0.1 %in% c(0,5))]="Preadipocytes"
adipocyte[which(adp$SCT_snn_res.0.1 %in% c(2,6))]="Proliferating cells"
adipocyte[which(adp$SCT_snn_res.0.1 %in% c(1,3))]="Differentiating beige adipocytes"
adipocyte[which(adp$SCT_snn_res.0.1 %in% c(4))]="Differentiated beige adipocytes"
adp$adipocyte = adipocyte

f1 = DimPlot(adp,group.by="SCT_snn_res.0.1",label=T) + NoLegend()
f2 = DimPlot(adp,group.by="time_point") + NoLegend()
f3 = DimPlot(adp,group.by="adipocyte",label=T)+NoLegend()

(f1|f2)/f3

adp.sce = as.SingleCellExperiment(adp,assay="SCT") #This selects *only* the SCT assay
mouseRNASeq = celldex::MouseRNAseqData()
head(mouseRNASeq)

table(mouseRNASeq$label.main)

table(mouseRNASeq$label.fine)

annot = SingleR(test=adp.sce, ref=mouseRNASeq, labels=mouseRNASeq$label.main)
head(annot)

table(annot$pruned.labels, useNA="ifany") #useNA can be used turned on in the `table` function

adp$mouseRNASeq.main=annot$pruned.labels

annotFig1 = DimPlot(adp,group.by="adipocyte",label=T)+NoLegend()
annotFig2 = DimPlot(adp,group.by="mouseRNASeq.main")

annotFig1|annotFig2

Idents(adp)="SCT_snn_res.0.1" #Assign clusters as the identities
avgExp = AverageExpression(adp, assays="SCT")$SCT #Run AverageExpression on the SCT assay and return only SCT
clustAnnot=SingleR(test=avgExp, ref=mouseRNASeq, labels=mouseRNASeq$label.main) #Run SingleR on the averaged expression matrix
clustAnnot

clustLabels = as.vector(clustAnnot$pruned.labels) #retrieve only the cluster-derived annotations
names(clustLabels) = c(0:6) #assign the cluster numbers as the annotations
clustLabels.vect = clustLabels[match(adp$SCT_snn_res.0.1, names(clustLabels))] #match the cluster identities per cell in the Seurat data to the cluster labels
names(clustLabels.vect) = colnames(adp) #ensure that the cluster identities are assigned the cell names
adp$mouseRNASeq.main.clust = clustLabels.vect #add the cluster annotations to the vector

clustAnnotFig1 = DimPlot(adp,group.by="SCT_snn_res.0.1",label=T)+NoLegend()
clustAnnotFig2 = DimPlot(adp,group.by="adipocyte",label=T)+NoLegend()
clustAnnotFig3 = DimPlot(adp,group.by="mouseRNASeq.main")
clustAnnotFig4 = DimPlot(adp,group.by="mouseRNASeq.main.clust")

(clustAnnotFig1|clustAnnotFig2)/(clustAnnotFig3|clustAnnotFig4)
