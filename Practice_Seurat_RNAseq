install.packages("Seurat")
install.packages('hdf5r')
library(Seurat)
library(tidyverse)

setwd("/Users/adrianchan/Desktop/GettingStarted_scRNASeq/data")
W10 <- Read10X_h5("W10_filtered_feature_bc_matrix.h5")
#List files 
files <- list.files(path="/Users/adrianchan/Desktop/GettingStarted_scRNASeq/data",recursive=T,pattern="*.h5")

#Create a list of count matrices
h5_read <- lapply(paste0("", files), Read10X_h5)

#Automated way to assign names; modify for your purposes   
#names(h5_read)<- sapply(files, 
#                        function(x){str_split_1(x,"_")[1]},
#                        USE.NAMES = FALSE)

#Assign names manually
names(h5_read)<-c("D10","D16","D20","D26","W10","W16","W20","W26")

W10[1:5,1:5]

# All samples
adp <- mapply(CreateSeuratObject,counts=h5_read,  
              project=names(h5_read),
              MoreArgs = list(min.cells = 3, min.features = 200))
# View adp 
adp

adp <- merge(adp[[1]], y = adp[2:length(adp)], 
             add.cell.ids = names(adp),project="Adipose")

adp2<-CreateSeuratObject(counts=h5_read, min.cells = 3,
                         min.features = 200)
head(adp@meta.data)
head(adp$orig.ident)
#Access multiple columns, rows. 
head(adp[[c("orig.ident", "nCount_RNA")]])[1:3,]

adp$condition <- ifelse(str_detect(adp@meta.data$orig.ident, "^W"),
                        "WT","DKO")
adp$time_point <- ifelse(str_detect(adp@meta.data$orig.ident, "0"),
                         "Day 0","Day 6")

adp$cond_tp <- paste(adp$condition, adp$time_point)

head(Cells(adp,layer="counts.W10"))

head(colnames(adp))

head(Features(adp))

head(rownames(adp))

Assays(adp)

#return number of cells across all layers
num_cells <- ncol(adp)
#return number of features across all layers
num_features <- nrow(adp)
#to return row by column information
dim(adp)

# Visualize the number of cell counts per sample
adp@meta.data %>% 
  ggplot(aes(x=orig.ident, fill=orig.ident)) + 
  geom_bar(color="black") +
  stat_count(geom = "text", colour = "black", size = 3.5, 
             aes(label = ..count..),
             position=position_stack(vjust=0.5))+
  theme_classic() +
  theme(plot.title = element_text(hjust=0.5, face="bold")) +
  ggtitle("Number of Cells per Sample")

saveRDS(adp,"/Users/adrianchan/Desktop/GettingStarted_scRNASeq/merged_Seurat_adp.rds")
library(ggplot2)
install.packages("patchwork")
install.packages("devtools")
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("glmGamPoi")
library(devtools)
install_github('immunogenomics/presto')
library(tidyverse) # dplyr and ggplot2
library(Seurat) # Seurat toolkit
library(hdf5r) # for data import
library(patchwork) # for plotting
library(presto) # for differential expression
library(glmGamPoi) # for sctransform
library(ggplot2)
adp <- readRDS("/Users/adrianchan/Desktop/GettingStarted_scRNASeq/merged_Seurat_adp.rds")
adp[["percent.mt"]] <- PercentageFeatureSet(adp, pattern = "^mt-")
adp@meta.data
metadata <- adp@meta.data

# set colors
cnames<-setNames(rep(c("cyan3","darkgoldenrod1"),each=4),levels(factor(metadata$orig.ident))) 

# plot
VlnPlot(adp, features = "nCount_RNA", layer="counts", group.by="orig.ident",raster=FALSE,alpha=0.2) +
  scale_fill_manual(values=cnames) 

metadata %>% 
  ggplot(aes(color=orig.ident, x=nCount_RNA, fill= orig.ident)) + 
  geom_density(alpha = 0.2) + 
  theme_classic() +
  scale_x_log10() + 
  geom_vline(xintercept = 650,color="red",linetype="dotted")

VlnPlot(adp, features = "nFeature_RNA", group.by="orig.ident") +
  scale_fill_manual(values=cnames) 

ggplot(metadata, aes(x=nFeature_RNA,fill=orig.ident)) +
  geom_density(alpha = 0.2) + 
  theme_classic() +
  scale_x_log10() + 
  geom_vline(xintercept = 350,color="red",linetype="dotted")

VlnPlot(adp, features = "percent.mt", group.by="orig.ident") +
  scale_fill_manual(values=cnames) +
  geom_hline(yintercept=10,color="red")

ggplot(metadata, aes(x=percent.mt,fill=orig.ident)) +
  geom_density(alpha = 0.2) + 
  scale_x_log10()+
  theme_classic()  

FeatureScatter(adp, feature1 = "percent.mt", feature2 ="nFeature_RNA" , group.by="orig.ident",split.by="time_point") 
FeatureScatter(adp, feature1 = "nCount_RNA", feature2 = "nFeature_RNA",group.by="orig.ident",split.by="time_point",log=TRUE)

ggplot(metadata) +
  geom_point(aes(x=nCount_RNA,y=nFeature_RNA,fill=percent.mt > 10),shape=21,alpha=0.4) + 
  theme_classic() +
  scale_x_log10()+
  scale_y_log10()+
  facet_grid(.~cond_tp) +
  geom_vline(xintercept = 650,color="red",linetype="dotted")+
  geom_hline(yintercept=350,color="red", linetype="dotted")

ggplot(metadata) +
  geom_point(aes(x=nCount_RNA,y=nFeature_RNA,fill=percent.mt > 25),shape=21,alpha=0.4) + 
  theme_classic() +
  scale_x_log10()+
  scale_y_log10()+
  facet_grid(.~cond_tp) +
  geom_vline(xintercept = 650,color="red",linetype="dotted")+
  geom_hline(yintercept=350,color="red", linetype="dotted")

# Set one set of parameters for Day 0 samples; 
# keep the rownames (Cell barcodes)
t0<- metadata |> filter(time_point=="Day 0", nFeature_RNA > 350, 
                        nCount_RNA >650, percent.mt <10 ) |> 
  rownames_to_column("Cell") |> pull(Cell) 

# Set an alternative set of thresholds for Day 6 samples; 
# keep the rownames (Cell barcodes)
t6<- metadata |> filter(time_point=="Day 6", nFeature_RNA > 350, 
                        nCount_RNA >650, percent.mt <25 ) |> 
  rownames_to_column("Cell") |> pull(Cell)

keep<-c(t0,t6)

# use different parameters; established above
adp_filt<-subset(adp, cells=keep)

saveRDS(adp_filt,"/Users/adrianchan/Desktop/GettingStarted_scRNASeq/adp_merge_filt.rds")

adp_filt <- SCTransform(adp_filt, vars.to.regress = "percent.mt", verbose = FALSE)
